/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        m1: m1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp O &kp C &kp K &kp W &kp E &kp L &kp L>;
            label = "M1";
            wait-ms = <10>;
            tap-ms = <10>;
        };

        m5: m5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>;
            label = "M5";
        };

        m6: m6 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N5 &kp C &kp V &kp A &kp LS(R) &kp N5 &kp B &kp EXCL>;
            label = "M6";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  F1  |  F2  |  F3   |  F4   |  F5   |                   |  F6   |  F7    |  F8    |  F9   |   F10   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // | SHIFT |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   | RSHFT |
            // | LCTRL |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   |   '   |
            //                     | LALT  | LGUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp ESC    &kp F1  &kp F2  &kp F3    &kp F4    &kp F5                        &kp F6  &kp F7    &kp F8     &kp F9   &kp F10   &kp GRAVE
&kp TAB    &kp Q   &kp W   &kp E     &kp R     &kp T                         &kp Y   &kp U     &kp I      &kp O    &kp P     &kp MINUS
&kp LSHFT  &kp A   &kp S   &kp D     &kp F     &kp G                         &kp H   &kp J     &kp K      &kp L    &kp SEMI  &kp RSHFT
&kp LCTRL  &kp Z   &kp X   &kp C     &kp V     &kp B   &kp LBKT     &tog 4   &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp SQT
                           &kp LALT  &kp LGUI  &mo 1   &kp SPACE    &kp RET  &mo 2   &kp RALT  &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       | C_VOL_DN | C_VOL_UP |C_PREV|C_PLAY|C_NEXT|                   |      |       |       |      |       |       |
            // | CAPS  |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |       |     |     |      |  PG_DN   | PG_UP|                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |  +   |   -   |   =   |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans    &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT                    &trans       &trans     &trans           &trans    &trans    &trans
&kp CAPS  &kp N1        &kp N2        &kp N3      &kp N4            &kp N5                        &kp N6       &kp N7     &kp N8           &kp N9    &kp N0    &trans
&trans    &trans        &trans        &trans      &kp PAGE_DOWN     &kp PG_UP                     &kp CARET    &kp AMPS   &kp KP_MULTIPLY  &kp LPAR  &kp RPAR  &kp TILDE
&trans    &trans        &trans        &trans      &trans            &trans      &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL        &kp LBRC  &kp RBRC  &kp PIPE
                                      &trans      &trans            &trans      &trans    &trans  &trans       &trans     &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |   <- |   v   |  ^    |  ->  |       |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &trans    &trans  &trans    &trans      &trans                       &trans       &trans     &trans           &trans     &kp F11   &kp F12
&kp GRAVE  &kp EXCL  &kp AT  &kp HASH  &kp DOLLAR  &kp PRCNT                    &kp CARET    &kp AMPS   &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp TILDE
&kp F1     &kp F2    &kp F3  &kp F4    &kp F5      &kp F6                       &kp LEFT     &kp DOWN   &kp UP           &kp RIGHT  &trans    &trans
&kp F7     &kp F8    &kp F9  &kp F10   &kp F11     &kp F12    &trans    &trans  &kp KP_PLUS  &kp MINUS  &kp EQUAL        &kp LBKT   &kp RBKT  &kp BSLH
                             &trans    &trans      &trans     &trans    &trans  &trans       &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &out OUT_TOG                    &m1     &trans  &trans      &trans  &m5     &m6
&trans  &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans      &trans  &trans  &trans
&trans  &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans      &trans  &trans  &trans
                                    &kp RALT      &trans        &trans        &trans    &trans  &trans  &trans  &bt BT_CLR
            >;
        };

        layer_4 {
            bindings = <
&kp ESC    &kp NUMBER_1    &kp NUMBER_2    &kp NUMBER_3  &kp NUMBER_4  &kp N5                        &kp INSERT  &kp F7    &kp F8     &kp F9   &kp F10   &kp GRAVE
&kp TAB    &kp Q           &kp UP_ARROW    &kp E         &kp R         &kp T                         &kp Y       &kp U     &kp I      &kp O    &kp P     &kp MINUS
&kp LSHFT  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT     &kp F         &kp G                         &kp H       &kp J     &kp K      &kp L    &kp SEMI  &kp RSHFT
&kp LCTRL  &kp Z           &kp X           &kp C         &kp V         &kp B   &kp LBKT     &tog 0   &kp N       &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp SQT
                                           &kp LALT      &kp LGUI      &mo 1   &kp SPACE    &kp RET  &mo 2       &kp RALT  &kp BSPC
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        third_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
